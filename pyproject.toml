[tool.poetry]
name = "tap-athena"
version = "1.1.0"
description = "`tap-athena` is a Singer tap for Athena, built with the Meltano Singer SDK."
readme = "README.md"
authors = ["AJ Steers <aaronsteers@gmail.com>", "Pat Nadolny <pat@meltano.com>"]
maintainers = ["Metano Team and Contributors <hello@meltano.com>"]
keywords = ["ELT", "Athena"]
license = "Apache-2.0"
packages = [{ include = "tap_athena" }]

[tool.poetry.dependencies]
python = "<3.12,>=3.8.1"
pyathena = ">=3,<4"
singer-sdk = "^0.31.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.2"
moto = "^4.2.3"
coverage = "^7.2.3"

[tool.poetry.extras]
s3 = ["fs-s3fs"]

[tool.mypy]
plugins = ["sqlalchemy.ext.mypy.plugin"]
python_version = "3.9"
warn_unused_configs = true

[tool.ruff]
select = [
  "F",
  "W",
  "E",
  "C90",
  "I",
  "N",
  "D",
  "UP",
  "YTT",
  "ANN",
  # "ASYNC",
  "S",
  "BLE",
  "FBT",
  "B",
  "A",
  "COM",
  # "CPY",
  "C4",
  "DTZ",
  "T10",
  "EM",
  "FA",
  "ISC",
  "ICN",
  "G",
  "INP",
  "PIE",
  "T20",
  "PT",
  "Q",
  "RSE",
  "RET",
  "SLF",
  "SIM",
  "TID",
  "TCH",
  "ARG",
  "PTH",
  "TD",
  "FIX",
  "ERA",
  "PGH",
  "PL",
  "TRY",
  "FLY",
  "PERF",
  "RUF",
]
ignore = [
  "ANN101", # missing-type-self
  "TD002",  # missing-todo-author
  "FIX002", # line-contains-todo
]
unfixable = [
  "ERA", # commented-out-code
]
line-length = 88
target-version = "py37"

[tool.ruff.flake8-import-conventions]
banned-from = ["typing"]

[tool.ruff.flake8-import-conventions.extend-aliases]
"typing" = "t"

[tool.ruff.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.pydocstyle]
convention = "google"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core==1.6.*",
]

[tool.poetry.scripts]
# CLI declaration
tap-athena = 'tap_athena.tap:TapAthena.cli'
